services:
  mssql:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1433:1433"
    networks:
      - kafka-network
    volumes:
      - ./mssql-data:/var/opt/mssql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE:"true"
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  kafka-connect:
    build:
      context: .
      dockerfile: Dockerfile.kafka-connect
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka:9092
      - CONNECT_REST_PORT=8083
      - CONNECT_GROUP_ID=compose-connect-group
      - CONNECT_CONFIG_STORAGE_TOPIC=my_connect_configs
      - CONNECT_OFFSET_STORAGE_TOPIC=my_connect_offsets
      - CONNECT_STATUS_STORAGE_TOPIC=my_connect_statuses
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_REST_ADVERTISED_HOST_NAME=kafka-connect
      - CONNECT_PLUGIN_PATH=/usr/share/java,/etc/kafka-connect/jars
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    volumes:
      - ./jars:/etc/kafka-connect/jars
    networks:
      - kafka-network

  schemaregistry:
    image: confluentinc/cp-schema-registry:7.4.0
    ports:
      - "8085:8085"
    depends_on:
      - kafka
      - zookeeper
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schemaregistry
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8085
    networks:
      - kafka-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - schemaregistry
      - kafka-connect
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_SCHEMAREGISTRY=http://schemaregistry:8085
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME=first
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS=http://kafka-connect:8083
      - DYNAMIC_CONFIG_ENABLED=true
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
